<!doctype html>
<html lang="en">

	<head>
		<meta charset="utf-8">

		<title>TimeSeries DataStores</title>

		<meta name="description" content="DataStore with TimeStamp of values as main index for record.">
		<meta name="author" content="AbhishekKr">

		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">

		<link rel="stylesheet" href="css/reveal.css">
		<link rel="stylesheet" href="css/theme/black.css" id="theme">

		<!-- Code syntax highlighting -->
		<link rel="stylesheet" href="lib/css/zenburn.css">

		<!-- Printing and PDF exports -->
		<script>
			var link = document.createElement( 'link' );
			link.rel = 'stylesheet';
			link.type = 'text/css';
			link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
			document.getElementsByTagName( 'head' )[0].appendChild( link );
		</script>

		<!--[if lt IE 9]>
		<script src="lib/js/html5shiv.js"></script>
		<![endif]-->
    <style>
      .comment {
        display: none;
      }
      .example {
        color: lightblue;
        font-style: italic;
      }
      .highlight {
        color: orange;
        font-style: italic;
      }
    </style>
	</head>

	<body>

		<div class="reveal">

			<!-- Any section element inside of this container is displayed as a slide -->
			<div class="slides">
				<section>
					<h1>TimeSeries DataStores</h1>
          <b><i>'cuz lost time is never found again</i></b>
					<p>
						<small>by <a href="http://abhishekkr.github.io">AbhishekKr</a> / <a href="http://twitter.com/abionic">@abionic</a></small>
					</p>
          <aside class="notes">
          </aside>
				</section>

				<section>
          <i>what will we discuss today</i>
          <ul>
            <li>What you can do with it? Why TSDB? <a href="#/2">-&raquo;</a></li>
            <li>What makes a (good) TSDB? <a href="#/26">-&raquo;</a></li>
            <li>Existing Solutions. <a href="#/36">-&raquo;</a></li>
          </ul>
				</section>

        <section class="fragments">
          <i>elevator pitch</i><br/><br/>
          <b>System focussed on data-storage optimized<br/>for time based queries.</b>
          <blockquote class="fragment" cite="https://www.mongodb.com/presentations/mongodc-2011/time-series-data-storage-mongodb?_ga=1.68909969.14190264.1442599445">
            Some of the largest datasets have strong time components...<br/> like stock market data, server logs, weather data, or even just the temperature in the server room.
          </blockquote>
          <aside class="notes">
          </aside>
        </section>

        <section class="fragments">
          <p>TimeSeries Databases</p>
          <ul>
            <li class="fragment">Not a unique problem, any DB can be made to work.</li>
            <li class="fragment">VividCortex reached 332k/sec metrics over 3 MySQL nodes.</li>
            <li class="fragment">It is writing new TSDB, <a href="https://www.vividcortex.com/blog/2015/06/09/in-case-you-missed-it-catena/">Catena</a> (800k/sec in Beta).</li>
            <li class="fragment">Focussed solutions are to handle scale/queries optimally.</li>
            <li class="fragment">It's like a BigData problem with "pre-structured" data.</li>
          </ul>
        </section>

        <section>
          <h3>Analytics</h3>
        </section>

        <section>
          <p>
          Some analysis are simple<br/>
          <img src="./slide-images/simple-analytics.jpg" title="simple-analytics"/>
          </p>
          <small><i>(image-courtesy: stackoverflow::analytics)</i></small>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <b>But some need correlation of time-series data</b>
          <p>
          <img src="./slide-images/Spurious-Correlations-nicolasCage-drownedPeople.jpg" title="spurious-correlation"/>
          </p>
          <small><i>(image-courtesy: Spurious Correlations)</i></small>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <b>Common Time-Series Data for Analysis</b>
          <p>
          <img src="./slide-images/analysis-logs.png" title="system-logs"/>
          </p>
          <small><i>(image-courtesy: /var/log)</i></small>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <b>Interesting Time-Series Data</b>
          <p>
          <img src="./slide-images/Histography.png" title="history timeline from wikipedia"/>
          </p>
          <small><i>(image-courtesy: <a href="http://histography.io/">histography.io</a>)</i></small>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <h3>Forecasting</h3>
        </section>

        <section>
          <b>Some series just seems random,<br/>but is actually predictable.</b>
          <p>
          <img src="./slide-images/dilbert-random-not-random.gif" title="simple-analytics"/>
          </p>
          <small><i>(image-courtesy: dilbert)</i></small>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <b>Not all predictions are accurate.</b>
          <p>
          <img src="./slide-images/need-big-time-sample-data.png" title="simple-analytics"/>
          </p>
          <small><i>(image-courtesy: xkcd)</i></small>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <b>But with enough data, they can be near perfect.</b>
          <p>
          <img src="./slide-images/data-labels-are-important.png" title="simple-analytics"/>
          </p>
          <small><i>(image-courtesy: xkcd)</i></small>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <b>Popular Time-Series Data Forecasting.</b>
          <p>
          <img src="./slide-images/AMZN-last-1Month.png" title="AMAZON Stock Last 1 Month"/>
          </p>
          <small><i>(image-courtesy: Yahoo! Finance)</i></small>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <b>Popular Time-Series Data Forecasting.</b>
          <p>
          <img src="./slide-images/AMZN-last-max.png" title="Amazon Sotck Last Ever"/>
          </p>
          <small><i>(image-courtesy: Yahoo! Finance)</i></small>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <b>Critical Time-Series Data Forecasting.</b>
          <p>
          <img src="./slide-images/forecast-weather.png" title="weather"/>
          </p>
          <small><i>(image-courtesy: Google Weather)</i></small>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <b>Critical Time-Series Data Forecasting.</b>
          <p>
          <img src="./slide-images/UVIndex-forecast.png" title="weather"/>
          </p>
          <small><i>(image-courtesy: <a href="http://exp-studies.tor.ec.gc.ca/cgi-bin/clf2/uv_index_calculator">Environment Canada</a>)</i></small>
          <aside class="notes">
          </aside>
        </section>

        <section class="fragments">
          <h3>Why?</h3>
          <p>
            Many kinds of analysis require keeping track of<br/> multiple factors over a period of time.<br/><i>Like...</i>
          </p>
          <aside class="notes">
            * <a href="http://blog.mongodb.org/post/65517193370/schema-design-for-time-series-data-in-mongodb">some mongod usages in Industry</a>
            * Forecasting (Average, Relevant Value Average, Seasonality Trend, Weighted Avergae, Smoothed Average)<br/>
          </aside>
        </section>

        <section class="fragments">
          <i>Why?</i>
          <p>
          <ul>
            <li>Device Performance Analytics</li>
          </ul>
          <p class="fragment example">
          Example: Finding out pattern of specific time-periods<br/>
          when resource load is more or less.<br/>
          Manage infrastructure costs<br/>
          by using influenced elastic cloud.
          </p>
          </p>
          <aside class="notes">
            * <a href="http://www.prnewswire.com/news-releases/skyline-innovations-achieves-california-solar-initiative-thermal-program-performance-data-provider-certification-212305521.html">Skyline</a><br/>
            * <a href="http://objectrocket.com/blog/customers/appboy-scales-horizontally-with-objectrocket-mongod"b>Appboy</a><br/>
              - To achieve such specific targeting, we built a powerful analytics engine using MongoDB to store our data. The Appboy platform collections billions of data points each month from our varied customers including photo sharing apps, games, text messaging apps, digital magazines and more. MongoDB is used as our primary data store and houses almost all of our pre-aggregated analytic data. MongoDB's flexible data store easily keeps track of time series data across dimensions, and ObjectRocket has proven to be a great database provider as we've grown to track billions of data points each month.
          </aside>
        </section>

        <section>
          <i>Why?</i>
          <p>
          <ul>
            <li>Decision's impact via Survey Trends</li>
          </ul>
          <p class="fragment example">
          Example: What marketting decisions were taken<br/>
          at what time?<br/>
          State of target customer class economy.<br/>
          Any impact on sale of any influencing data.
          </p>
          </p>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <i>Why?</i>
          <p>
          <ul>
            <li>Predicting herd mentality in Stock Exchange</li>
          </ul>
          <p class="fragment example">
          Example: Which public company related event<br/>
          had what impact?<br/>
          Just general trend in competitors stock health<br/>
          co-related with of your own.
          </p>
          </p>
          <aside class="notes">
            * <a href="http://financial.mcobject.com/extremedb-financial-edition/market-data/">extremeDB</a><br/>
            * <a href="https://en.wikipedia.org/wiki/FAME_%28database%29">FAME Database: Forecasting Analysis and Modeling Environment</a><br/>
            * < href="http://www.sungard.com/solutions/market-data/market-map/">Sunguard's Market Map</a>
          </aside>
        </section>

        <section>
          <i>Why?</i>
          <p>
          <ul>
            <li>Map Medical IoT monitoring with regular health checks</li>
          </ul>
          <p class="fragment example">
          Example: Users average heartbeat<br/>
          co-related with exercise done.<br/>
          Warning based on old health issues<br/>
          with current blood pressure trend.
          </p>
          </p>
          <aside class="notes">
            * <a href="https://gigaom.com/2012/04/13/meet-tempodb-a-database-startup-with-an-eye-for-time/">TempoDB description at GigaOM</a>
          </aside>
        </section>

        <section>
          <i>Why?</i>
          <p>
          <ul>
            <li>Intrusion Detection Systems</li>
          </ul>
          <p class="fragment example">
          Example: Seasonality of user requests<br/>
          and trend of traffic increase.<br/>
          Significant anomaly in such<br/>
          can be used by IDS to predict attacks.
          </p>
          </p>
          <aside class="notes">
            * < href="http://www.census.gov/retail/marts/www/timeseries.html">Census</a>
          </aside>
        </section>

        <section class="fragments">
          Daily examples could be 
          <ul>
            <li class="fragment example"> stock tick information from global stock exchanges </li> 
            <li class="fragment example"> precious metals prices captured periodically </li> 
            <li class="fragment example"> weather details at a specific long/lat at periodic interval </li> 
            <li class="fragment example"> continuous sensor feed from manufacturing machines or oil rigs, solar panels, etc.  </li> 
          </ul>
        </section>

        <section class="fragments">
          TimeSeries information is not necessarily different
            but<br/>
            <ul class="example">
              <li>the volume and speed aspect of data</li>
              <li>the sparseness of the information</li>
            </ul><br/>
            that makes it challenging to be stored in traditional stores.
        </section>

        <section class="fragments">
          <p>
          To analyze the data based on the time dimension,<br/><br/>keep arrival time of each feed and<br/><br/>optimize queries by it.
          </p>
        </section>

        <section class="fragments">
          <h3>What makes a TimeSeries DataStore?</h3>
          <aside class="notes">
          </aside>
        </section>

        <section class="fragments">
          <i>What?</i><br/>
          <p>
          Storing and Retrieval of Primary Data Points indexed by their TimeStamps.
          </p>
          <aside class="notes">
          </aside>
        </section>

        <section class="fragments">
          <h3>What makes it better?</h3>
          <aside class="notes">
          </aside>
        </section>

        <section class="fragments">
          <i>What more?</i><br/>
          <p>
          <ul>
            <li>Consolidated Data Points</li>
          </ul>
          </p>
          <small class="example">
          sum, avg, min, max, endpoints, <i>a function specific to type of data</i>
          </small>
          <aside class="notes">
          </aside>
        </section>

        <section class="fragments">
          <i>What more?</i><br/>
          <p>
          <ul>
            <li>Consistency and Durability suiting to target domain.</li>
          </ul>
          </p>
          <small class="example">
            Not all. If it is of life-impacting surveys, monetary transactions or any important prediction.
          </small>
          <aside class="notes">
          </aside>
        </section>

        <section class="fragments">
          <i>What more?</i><br/>
          <p>
          <ul>
            <li>Scalable and Performant to fit the required scenarios.</li>
          </ul>
          </p>
          <small class="example">
            circular-buffer OR big-data || 100s to  Millions Records/Sec
          </small>
          <aside class="notes">
          </aside>
        </section>

        <section class="fragments">
          <i>What more?</i><br/>
          <p>
          <ul>
            <li>Compressed Contiguous (old) Data Blobs</li>
          </ul>
          </p>
          <small class="example">
          in wide-row formats when blobs of data are persisted, better compress
          </small>
          <aside class="notes">
          </aside>
        </section>

        <section class="fragments">
          <i>What more?</i><br/>
          <p>
          <ul>
            <li>Reusable (BigData) Analytics Toolset</li>
          </ul>
          </p>
          <small class="example">
          if utilize HBase/Cassandra backends, can plug-in existing data crunching mammoths  
          </small>
          <aside class="notes">
          </aside>
        </section>

        <section class="fragments">
          <i>What more?</i><br/>
          <p>
          <ul>
            <li>Non-Blocking Backups</li>
          </ul>
          </p>
          <small class="example">
           timeseries keep coming at 'continuous (ir)regular intervals of time'
          </small>
          <aside class="notes">
          </aside>
        </section>

        <section class="fragments">
          <i>What more?</i><br/>
          <p>
          <ul>
            <li>Auto(or default) managed load-balancing.</li>
          </ul>
          </p>
          <small class="example">
            scaling up and down need be seamless; remember the data stream is coming
          </small>
          <aside class="notes">
          </aside>
        </section>

        <section class="fragments">
          Popular Types<br/>
          <ul>
            <li class="fragment">Relational Database (special schemas)</li>
            <li class="fragment">NoSQL Databases (epoch indexes)</li>
            <li class="fragment">NoSQL Databases (wide tables)</li>
            <li class="fragment"><a href="https://medium.com/@hellomichibye/column-oriented-database-introduction-part-1-572e5780aebb">Column</a> <a href="https://medium.com/@hellomichibye/column-oriented-database-draft-part-2-21199a2de18a">Oriented</a> <a href="https://en.wikipedia.org/wiki/Column-oriented_DBMS">Databases</a></li>
          </ul>
          <aside class="notes">
            It's not a unique problem and can be done via any database. Just the requirement scenario doesn't fit everywhere equally.<br/>
            The different solutions are not cuz of incapability of existing databases but of scale in which data might be written, read and analyzed. Which is of scale. A BigData problem where data is pre-structured and hence can be dealt more intelligent alogrithmic way.<br/>
            * Normally large volumes of data is pushed in at steady pace. Buffer writes not always help.<br/>
            * Spark + Cassandra by DataStax for TSDB : https://academy.datastax.com/demos/getting-started-time-series-data-modeling <br/>
            * VividCortex has reached 332k/sec metrics over 3 servers (each 8CPU,26GB RAM) over their MySQL implementation. Can't Ad-Hoc query TimeSeries data.<br/>
            * Cacti has been using MySQL to store such data forever.<br/>
          </aside>
        </section>

        <section>
          <h3>Existing Solutions</h3><br/>
          majority of these are <i>opensource</i><br/>
          and I'm <i>biased</i><br/>
          :)
          <aside class="notes">
          </aside>
        </section>

        <section class="fragments">
          <a href="https://oss.oetiker.ch/rrdtool/">RRDTool</a>
          <p class="fragment">
            One of the earliest and most popular TimeSeries DataStore.
          </p>
          <p class="fragment">
            Has persistence, in-memory caching &amp; concurrent tasks.
          </p>
          <p class="fragment">
            A circular-buffer based store. Bad at Sparse Metrics.
          </p>
          <p class="fragment">
            No partition, replication or atomic integrity.
          </p>
          <aside class="notes">
              Links: <a href="https://oss.oetiker.ch/rrdtool/tut/rrdtutorial.en.html">RRD Tutorial</a>,<
                     <a href="https://oss.oetiker.ch/rrdtool/tut/cdeftutorial.en.html">Using RRD</a>,
                     <a href="https://oss.oetiker.ch/rrdtool/tut/rrd-beginners.en.html">Beginners</a>
          </aside>
        </section>

        <section class="fragments">
          <a href="https://github.com/graphite-project/">Graphite</a>
          <p class="fragment">
            <a href="https://graphite.readthedocs.org/en/latest/carbon-daemons.html">Carbon</a>: Twisted powered metrics processing daemon.
          </p>
          <p class="fragment">
            <a href="https://graphite.readthedocs.org/en/latest/whisper.html">Whisper</a>: time-series db library based on RRD principles.
          </p>
          <p class="fragment">
          Multi-Archive Storage and Retrieval Behavior.<br/>
          File per time-series.<br/>
          Doesn't scale well as more file-descriptors per series.
          </p>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <a href="http://www.opentsdb.net/">OpenTSDB</a>
          <p class="fragment">
            Runs on Hadoop and HBase. <i>Highly Scalable.</i>
          </p>
          <p class="fragment">
            Since <i>v2.0</i> provides good Plug-in architecture.
          </p>
          <p class="fragment">
          Involves lot of moving parts (Hadoop, HBase, Zookeeper).<br/> All need to be managed. 
          </p>
          <p class="fragment">
            DownSampling for graphs; not to feed into calculations.
          </p>
          <aside class="notes">
            * Overview: http://opentsdb.net/overview.html<br/>
            * Scales to millions of writes per second<br/>
            * Add capacity by adding nodes<br/>
            * Docker Image: 'petergrace/opentsdb-docker'<br/>
            * Go Package for interaction: https://github.com/bzub/go-opentsdb<br/>
            * Plug-ins support for Logging, Serializers, Search, Real-Time Publishing, RPC<br/>
            * There is an issue open to fix DownSampling @[Github-Issues](https://github.com/OpenTSDB/opentsdb/pull/325).<br/>
          </aside>
        </section>

        <section>
          <a href="http://kairosdb.github.io/website/">KairosDB</a>
          <p class="fragment">
            Kind of re-write of OpenTSDB <i>(not a fork)</i> that runs on Cassandra. <i>Highly Scalable.</i>
          </p>
          <p class="fragment">
            Keep data and presentation of data separate.
          </p>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <a href="http://influxdb.com/">InfluxDB</a>
          <p class="fragment">
            Series of Measurements + Unique Tagset.<br/>
            Datapoints have fields and timestamp in nano epoch.
          </p>
          <p class="fragment">
            No external dependencies.<br/>
            Started with LevelDB, then RocksDB.<br/>
            Default to BoltDB currently (v0.9.1 I think).
          </p>
          <p class="fragment">
            WAL to enable BoltDB manage its memory swiftly.
          </p>
          <p class="fragment">
            Over HTTP. Useful SQL-ish language for data query.
          </p>
          <p class="fragment">
            Had Protobufs now Raw Bytes.
          </p>
          <aside class="notes">
            * LevelDB: Too many file handles, no online backups, too hard to transfer shard from one server to another.<br/>
          </aside>
        </section>

        <section>
          <a href="http://druid.io/">Druid</a>
          <p class="fragment">
            <a href="https://en.wikipedia.org/wiki/Lambda_architecture">Lambda Architecture</a><br/>
            <img src="./slide-images/druid.png" text="Druid Architecture"/>
          </p>
          <aside class="notes">
            * <a href="https://twitter.com/fangjin">Fangjin</a> and <a href="https://twitter.com/gianmerlino">Giam</a> core folks<br/>
            * <a href="https://github.com/druid-io/tranquility">Tranquility</a>: Realtime ingestion from <a href="https://aws.amazon.com/kinesis/faqs/">Kinesis</a> to Druid<br/>
            * <a href="https://github.com/Quantiply/druid-vagrant">Single Node DRUID cluster</a><br/>
            Query Layer<br/>
            * RDBMS (MySQL, PgSQL): Scan speed of data was quiet slow.<br/>
            * NoSQL Key/Val (HBase, Cassandra): You often end up doing many pre-computing results.<br/>
            * Commercial (Vertica, Redshift): but customization on FOSS is powerful<br/>
          </aside>
        </section>

        <section>
          <a href="https://github.com/Netflix/atlas">Netflix's Atlas</a>
          <p class="fragment">
          Near real-time graphing for operational insights at scale.
          </p>
          <p class="fragment">
          Predictable Alerting (like lot less traffic than <a href="http://www.itl.nist.gov/div898/handbook/pmc/section4/pmc435.htm" text="Holt-Winter Exponential Smoothing">predicted</a>)
          </p>
          <p class="fragment">
          <span class="highlight">Netflix</span> handles more than 1TB analytics data/day with it.
          </p>
          <p class="fragment">
          In-memory (complete for 6hrs, roll-ups for 2 weeks). <a href="https://github.com/Netflix/atlas/wiki/Overview#cost">Pain.</a>
          </p>
          <p class="fragment">
          Persists raw data in S3. Uses Hive to process old data.
          </p>
          <aside class="notes">
            * People tried asking KairosDB backend for Atlas, [here](https://github.com/Netflix/atlas/issues/20)<br/>
          </aside>
        </section>

        <section>
          <a href="http://prometheus.io/">Prometheus</a>
          <p class="fragment">
          A Service Monitoring System with built-in TSDB<br/>
          by <span class="highlight">SoundCloud</a>.
          </p>
          <p class="fragment">
          Has a query language, alerting and visualization.
          </p>
          <p class="fragment">
          Data-model as OpenTSDB. Metric names,<br/> labelled with key-values.
          </p>
          <p class="fragment">
          Can tweak data handled in RAM and Disk (LevelDB).
          </p>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <a href="http://blueflood.io/">Blueflood</a>
          <p class="fragment">
          By <span class="highlight">RackSpace Cloud Monitoring Team</span><br/>
          for RealTime Analytics.
          </p>
          <p class="fragment">
          Auto-purges, not ideal for Batch Tasks on old data.
          </p>
          <p class="fragment">
          Uses Cassandra for datastorage.<br/>Optional support of Zookeeper and ElasticSearch.
          </p>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <a href="http://kx.com/documentation.php">Kdb+ (commercial)</a>
          <p class="fragment">
          Columnar High Performance DB.<br/>Built-in array language 'q' to work directly on data.<br/>
          <small>Can be used for streaming, real-time and historical data.</small>
          </p>
          <p class="fragment">
          OLTP from 100 thousand to 1 million records/second/cpu.<br/>
          OLAP from 1 million to 100 million records/second/cpu.
          </p>
          <p class="fragment">
          <small>Popular in Financial Sectors.<br/>
            Customers: <span class="highlight">Goldman Sachs, JP Morgan, Deutsche Bank, etc.</span><br/>
            Also in Utilities, Telecom, Pharamceuticals, Oil-n-Gas sectors.</small>
          </p>
          <p class="fragment">
            SaaS model over Kdb+ at <a href="https://www.timeseries.guru/">TimeSeries.guru</a>
          </p>
          <p class="fragment">
            32bit Free for Dev/PoC tasks not commercial. (1GB RAM)
          </p>
          <aside class="notes">
            * <a href="http://www.kx.com/q/d/kdb+.htm?_ga=1.204166864.171742242.1444758883">Getting Started, Insight</a>
          </aside>
        </section>

        <section>
          <a href="http://www.sitewhere.org/">SiteWhere (community edition)</a>
          <p class="fragment">
            It runs on MongoDB or Hadoop/HBase.
          </p>
          <p class="fragment">
            Provides 'Complex Event Processing' via <a href="https://github.com/wso2/siddhi">Siddhi</a>.
          </p>
          <p class="fragment">
            Provides search and analytics via <a href="#">Apache Solr</a>.
          </p>
          <p class="fragment">
          Connect devices with MQTT, AMQP, Stomp, other protocols.
          </p>
          <p class="fragment">
          SaaS; IoT focussed; REST registration; Arduino and Android
          </p>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <a href="http://www.tempoiq.com/">tempoiq</a><br/>
          <p class="fragment">
          legacy: <a href="www.tempo-db.com">tempodb</a>, <a href="https://gigaom.com/2012/04/13/meet-tempodb-a-database-startup-with-an-eye-for-time/">@gigaom</a>; (commercial)
          </p>
          <p class="fragment">
          Focussed on IoT sensors data<br/> for analysis, dashboarding and reporting.
          </p>
          <p class="fragment">
          Connect anything with flexible event data model, HTTPs, MQTT
          </p>
          <aside class="notes">
          </aside>
        </section>

        <section>
          <small><i>something I was working on</i></small>
          <h4>MomentDB/GoShare</h4>
          <ul>
            <li class="fragment">TimeSeries arranged as NameSpaced Keys<br/><small>httpd:ERROR:2015:10:16:54:45:34 = yada | 2015:10:16:54:57:34:httpd:ERROR = nada</small></li>
            <li class="fragment">HTTP and ZeroMQ support for now</li>
          </ul><br/>
        </section>

        <section>
          <i>W.I.P.</i><br/>
          <ul>
            <li class="fragment">Optional Datastore Layer (just k/v or namespaced)</li>
            <li class="fragment">Distributed+Optimized Store<br/>(Shards, Replicators, Buffers, Compression)</li>
            <li class="fragment">Delegated DownSampler and Predicting Engines</li>
            <li class="fragment"><a href="http://mqtt.org/">MQTT</a> support; also <a href="http://msgpack.org/index.html">MsgPack</a> -or- <a href="https://capnproto.org/">Cap'nProto</a></li>
          </ul>
        </section>

				<section style="text-align: left;">
					<b>It's about TIME.</b>
          <h3>Questions</h3>
					<p>
            - Ranking of <a href="http://db-engines.com/en/ranking/time+series+dbms">TimeSeries DBEngines</a><br/>
            - feedback/contributions <a href="https://github.com/abhishekkr/momentdb">'MomentDB</a>/<a href="https://github.com/abhishekkr/goshare">Goshare'</a><br/>
            - this presentation @<a href="#">quick link WIP</a> <br/>
					</p>
				</section>

			</div>

		</div>

		<script src="lib/js/head.min.js"></script>
		<script src="js/reveal.js"></script>

		<script>

			// Full list of configuration options available at:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,

				transition: 'slide', // none/fade/slide/convex/concave/zoom

				// Optional reveal.js plugins
				dependencies: [
					{ src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/highlight/highlight.js', async: true, condition: function() { return !!document.querySelector( 'pre code' ); }, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: 'plugin/zoom-js/zoom.js', async: true },
					{ src: 'plugin/notes/notes.js', async: true }
				]
			});

		</script>

	</body>
</html>
